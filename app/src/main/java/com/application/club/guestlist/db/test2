package com.application.club.guestlist.login;

import android.content.SharedPreferences;
import android.os.Bundle;

import com.application.club.guestlist.MainActivity;
import com.application.club.guestlist.R;
import com.application.club.guestlist.offer.OfferDisplayActivity;
import com.application.club.guestlist.service.EventListener;
import com.application.club.guestlist.service.SocketOperator;
import com.application.club.guestlist.utils.Constants;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.location.LocationRequest;
import com.google.android.gms.location.LocationServices;

import android.os.SystemClock;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.widget.Button;

import android.content.Intent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONObject;

/**
 * Created by vichi on 11/01/18.
 */

public class LoginActivity extends AppCompatActivity implements  EventListener {

    private static final String TAG = LoginActivity.class.getSimpleName();

    Button button;

    SocketOperator socketOperator  = new SocketOperator(this);

    boolean isCustomerCreated = false;

    boolean startMainActivityFlag = true;

    String customerId = null;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        ActionBar actionBar = getSupportActionBar();
        actionBar.hide();





        /*
         * Check if we successfully logged in before.
         * If we did, redirect to home page
         */
        SharedPreferences settings = getSharedPreferences(Constants.PREFS_NAME, 0);
        if (settings.getString("logged", "").toString().equals("logged")) {

            Bundle bundle = getIntent().getExtras();
            Intent intentOffer = new Intent(this, OfferDisplayActivity.class);
            if (bundle != null) {
                boolean startOfferActivity = false;
                for (String key : bundle.keySet()) {
                    Object value = bundle.get(key);
                    Log.d(TAG, "Key: " + key + " Value: " + value.toString());
                    intentOffer.putExtra(key, value.toString());
                    if(key.equalsIgnoreCase("clubid")){
                        startOfferActivity = true;
                        startMainActivityFlag = false;
                    }


                }
                if(startOfferActivity == true){
                    intentOffer.putExtra(Constants.IS_NOTIFICATION, "notification");
                    startActivity(intentOffer);
                }

            }


            if(startMainActivityFlag){

                Intent intent = new Intent(LoginActivity.this,
                        MainActivity.class);
                String custmerName = settings.getString("name","");
                String custmerMobile = settings.getString("mobile","");
                intent.putExtra(Constants.CUSTOMERNAME, custmerName);
                intent.putExtra(Constants.MOBILE, custmerMobile);
                startActivity(intent);

            }





        }








        // Locate the button in activity_main.xml
        button = (Button) findViewById(R.id.next);

        // Capture button clicks
        button.setOnClickListener(new OnClickListener() {
            public void onClick(View arg0) {

                EditText cname = (EditText) findViewById(R.id.cname);
                final String name = cname.getText().toString();
                final EditText cmobile = (EditText) findViewById(R.id.cmobile);
                final String mobile = cmobile.getText().toString();
                EditText ccmobile = (EditText) findViewById(R.id.ccmobile);
                final String confirmMobile = ccmobile.getText().toString();

                if(null != name && !name.trim().equalsIgnoreCase("")) {

                    if (null != mobile && mobile.trim().length() >= 10) {

                        if (null != confirmMobile && confirmMobile.trim().length() >= 10 && mobile.equalsIgnoreCase(confirmMobile)) {


                            /*
                             * So login information is correct,
                             * we will save the Preference data
                             * and redirect to next class / home
                             */
                            try{

                                CheckBox chkBox = (CheckBox) findViewById(R.id.chkIos);
                                if(!chkBox.isChecked()){
                                    Toast.makeText(LoginActivity.this, "Please confirm your age is 21", Toast.LENGTH_LONG).show();
                                    return;
                                }
                                JSONObject customerDetails = new JSONObject();
                                customerDetails.put("action", "createNewCustomer");
                                customerDetails.put(Constants.CUSTOMERNAME, name);
                                customerDetails.put(Constants.MOBILE, confirmMobile);

                                socketOperator.sendMessage(customerDetails);

                                while(!isCustomerCreated){
                                    SystemClock.sleep(1000);
                                }



                            }catch (Exception ex){
                                ex.printStackTrace();
                            }


                            SharedPreferences settings = getSharedPreferences(Constants.PREFS_NAME, 0);
                            SharedPreferences.Editor editor = settings.edit();
                            editor.putString("logged", "logged");
                            editor.putString("name", name);
                            editor.putString("mobile", confirmMobile);
                            editor.putString(Constants.CUSTOMERID, customerId);
                            editor.commit();



                            Intent intent = new Intent(LoginActivity.this,
                                    SelectCityActivity.class);

//                            intent.putExtra(Constants.CUSTOMERNAME, name);
//                            intent.putExtra(Constants.MOBILE, mobile);

                            startActivity(intent);

                        }else{
                            Toast.makeText(LoginActivity.this, "Mobile Number are not matching!", Toast.LENGTH_LONG).show();
                        }


                    }else{
                        Toast.makeText(LoginActivity.this, "Pleae Enter Correct Mobile Number !", Toast.LENGTH_LONG).show();
                    }

                }else{
                    Toast.makeText(LoginActivity.this, "Pleae Enter Name !", Toast.LENGTH_LONG).show();
                }


            }
        });
    }


    public void eventReceived(String message){
        // conver message to list
        if(message != null){

            try{
                if(message != null){
                    JSONObject customerIdjObj = new JSONObject(message);
                    customerId = customerIdjObj.getString(Constants.CUSTOMERID);

                    isCustomerCreated = true;
                }



            }catch (Exception ex){
                ex.printStackTrace();

            }

        }
    }



}
